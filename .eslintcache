[{"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\index.js":"1","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\serviceWorker.js":"2","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\App.js":"3","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\contexts\\themeContext.js":"4","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\contexts\\context.js":"5","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\contexts\\authContext.js":"6","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\Nav.js":"7","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\Search.js":"8","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\Watchlist.js":"9","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\Profile.js":"10","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\ItemDetails.js":"11","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\Page.js":"12","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\reducers\\movieReducer.js":"13","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\reducers\\watchlistReducer.js":"14","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\Button.js":"15","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\themeToggler.js":"16","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\ItemCard.js":"17","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\images\\index.js":"18","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\pages\\home.js":"19","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\pages\\Home.js":"20","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\containers\\footer.js":"21","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\watchlistToggle.js":"22","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\contexts\\firebase.js":"23","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\lib\\firebase.prod.js":"24","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\pages\\sign-in.js":"25","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\pages\\sign-up.js":"26","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\form\\index.js":"27","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\form\\styles\\form.js":"28","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\constants\\constants.js":"29","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\constants\\routes.js":"30"},{"size":1163,"mtime":1611440826389,"results":"31","hashOfConfig":"32"},{"size":5086,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":1951,"mtime":1611501087995,"results":"34","hashOfConfig":"32"},{"size":889,"mtime":1609102255330,"results":"35","hashOfConfig":"32"},{"size":5257,"mtime":1611407818958,"results":"36","hashOfConfig":"32"},{"size":446,"mtime":1590181427022,"results":"37","hashOfConfig":"32"},{"size":6175,"mtime":1611488796325,"results":"38","hashOfConfig":"32"},{"size":3739,"mtime":1610888163813,"results":"39","hashOfConfig":"32"},{"size":334,"mtime":1590183630767,"results":"40","hashOfConfig":"32"},{"size":1292,"mtime":1611407693228,"results":"41","hashOfConfig":"32"},{"size":6362,"mtime":1611430626088,"results":"42","hashOfConfig":"32"},{"size":3311,"mtime":1611441371941,"results":"43","hashOfConfig":"32"},{"size":1110,"mtime":1610058121112,"results":"44","hashOfConfig":"32"},{"size":422,"mtime":1590955837558,"results":"45","hashOfConfig":"32"},{"size":509,"mtime":1609516103689,"results":"46","hashOfConfig":"32"},{"size":3939,"mtime":1611268684772,"results":"47","hashOfConfig":"32"},{"size":4392,"mtime":1611355520860,"results":"48","hashOfConfig":"32"},{"size":575,"mtime":1609967932471,"results":"49","hashOfConfig":"32"},{"size":1693,"mtime":1610317204221,"results":"50","hashOfConfig":"32"},{"size":1696,"mtime":1611407397698,"results":"51","hashOfConfig":"32"},{"size":2897,"mtime":1611271909806,"results":"52","hashOfConfig":"32"},{"size":1632,"mtime":1611430327157,"results":"53","hashOfConfig":"32"},{"size":95,"mtime":1611440873136,"results":"54","hashOfConfig":"32"},{"size":655,"mtime":1611503797210,"results":"55","hashOfConfig":"32"},{"size":1954,"mtime":1611501640289,"results":"56","hashOfConfig":"32"},{"size":2403,"mtime":1611501370391,"results":"57","hashOfConfig":"32"},{"size":1231,"mtime":1611444212590,"results":"58","hashOfConfig":"32"},{"size":1704,"mtime":1611501470734,"results":"59","hashOfConfig":"32"},{"size":339,"mtime":1611443586010,"results":"60","hashOfConfig":"32"},{"size":128,"mtime":1611443873116,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1gc8s05",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\index.js",[],["134","135"],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\serviceWorker.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\App.js",["136","137"],"import React, { useContext } from \"react\";\nimport \"./App.css\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Page from \"./components/Page\";\nimport ItemDetails from \"./components/ItemDetails\";\nimport Search from \"./components/Search\";\nimport Profile from \"./components/Profile\";\nimport Watchlist from \"./components/Watchlist\";\nimport Home from \"./pages/Home\";\nimport SignIn from \"./pages/sign-in\";\nimport SignUp from \"./pages/sign-up\";\nimport Footer from \"./containers/footer\";\n\nimport * as ROUTES from \"./constants/routes\";\nimport { POPULAR, TOP_RATED, UPCOMING, DISCOVER } from \"./constants/constants\";\n\nimport { ThemeContext } from \"./contexts/themeContext\";\n\nfunction App() {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home header={\"Home\"} />\n        </Route>\n        <Route exact path=\"/discover\">\n          <Page title={\"Discover\"} category={DISCOVER} />\n        </Route>\n        <Route exact path=\"/popular\">\n          <Page title={\"Popular\"} category={POPULAR} />\n        </Route>\n        <Route exact path=\"/toprated\">\n          <Page title={\"Top Rated\"} category={TOP_RATED} />\n        </Route>\n        <Route exact path=\"/upcoming\">\n          <Page title={\"Upcoming\"} category={UPCOMING} />\n        </Route>\n        <Route path=\"/games\">\n          <Page />\n        </Route>\n        <Route exact path={ROUTES.SIGN_IN}>\n          <SignIn />\n        </Route>\n        <Route exact path={ROUTES.SIGN_UP}>\n          <SignUp />\n        </Route>\n        <Route path=\"/profilename/watchlist\">\n          <Watchlist />\n        </Route>\n        <Route path=\"/movies/:movieId\">\n          <ItemDetails />\n        </Route>\n        {/* <Route path=\"?s=:query\">\n          <Page title={\"Search results for...\"} />\n        </Route> */}\n      </Switch>\n      <Footer theme={theme} />\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\contexts\\themeContext.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\contexts\\context.js",["138"],"import React, { useState, useEffect, useReducer } from \"react\";\r\n// import { useFetch } from \"../hooks/useFetch\";\r\nimport { movieReducer } from \"../reducers/movieReducer\";\r\nimport { watchlistReducer } from \"../reducers/watchlistReducer\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst initialState = {\r\n  data: [],\r\n  // selectedItem: {},\r\n  loading: true,\r\n  error: \"\",\r\n  watchlist: [],\r\n};\r\n\r\nconst ContextProvider = ({ children }) => {\r\n  const API_KEY = \"04885294e995c2b055be7cf3da2429ed\";\r\n  const baseurl = `https://api.themoviedb.org/3`;\r\n  const base_path = \"/movie\";\r\n  // console.log(props.category);\r\n  // const baseurl = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`;\r\n  // const API_KEY2 = \"facf1e25\";\r\n  // const fetchedData = useFetch(baseurl).results;\r\n  // const [items, setItems] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(JSON.parse(localStorage.getItem(\"selectedItem\")) || {});\r\n  // const [watchlist, dispatch] = useReducer(watchlistReducer, [], () => {\r\n  //   const localWatchlist = localStorage.getItem(\"watchlist\");\r\n  //   return localWatchlist ? JSON.parse(localWatchlist) : [];\r\n  // });\r\n  const [items, dispatch] = useReducer(movieReducer, initialState);\r\n  const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem(\"favorites\")) || []);\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"watchlist\", JSON.stringify(watchlist));\r\n  // }, [watchlist]);\r\n\r\n  useEffect(() => {\r\n    if (selectedItem !== undefined) {\r\n      localStorage.setItem(\"selectedItem\", JSON.stringify(selectedItem));\r\n    }\r\n  }, [selectedItem]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  // The Movie Database API\r\n  // useEffect(() => {\r\n  //   fetch(baseurl)\r\n  //     .then((res) => res.json())\r\n  //     .then((data) => setItems(data.results))\r\n  //     .catch((err) => console.log(err));\r\n  // }, []);\r\n\r\n  console.log(items);\r\n\r\n  // Kör getMovies vid uppstart\r\n  // useEffect(() => {\r\n  //   async function getMovies(category) {\r\n  //     try {\r\n  //       const res = await fetch(`${baseurl}${base_path}${category}/?language=en-US&api_key=${API_KEY}`);\r\n  //       const data = await res.json();\r\n  //       const dataWithWatchlist = await data.results.map((item) => ({ ...item, watchlisted: false }));\r\n  //       dispatch({ type: \"FETCH_SUCCESS\", payload: dataWithWatchlist });\r\n  //     } catch (error) {\r\n  //       dispatch({ type: \"FETCH_ERROR\", payload: error });\r\n  //     }\r\n  //   }\r\n  //   getMovies();\r\n  // }, []);\r\n\r\n  // Test att köra getMovies vid inladdning av sidan, där sidan kör getMovies istället för att context kör det vid start\r\n  const getMovies = (category) => {\r\n    // dispatch({ type: \"CATEGORY_CHANGE\", category });\r\n    fetch(`${baseurl}${base_path}${category}/?language=en-US&api_key=${API_KEY}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // const dataWithWatchlist = data.results.map((item) => ({ ...item, watchlisted: false }));\r\n        const dataWithWatchlist = formatMovieWatchlist(data.results);\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: dataWithWatchlist });\r\n      })\r\n      .catch((error) => dispatch({ type: \"FETCH_ERROR\", payload: error }));\r\n    //   const data = await res.json();\r\n    //   const dataWithWatchlist = await data.results.map((item) => ({ ...item, watchlisted: false }));\r\n    //   dispatch({ type: \"FETCH_SUCCESS\", payload: dataWithWatchlist });\r\n    // } catch (error) {\r\n    //   dispatch({ type: \"FETCH_ERROR\", payload: error });\r\n    // }\r\n  };\r\n\r\n  const formatMovieWatchlist = (movies) => {\r\n    const moviesWithWatchlist = movies.map((item) => ({ ...item, watchlisted: false }));\r\n    return moviesWithWatchlist;\r\n  };\r\n\r\n  // console.log(items);\r\n\r\n  // const appendWatchlisted = () => {\r\n  //   let newArr = [...items];\r\n  //   const alteredItems = newArr.map((movie) => ({ ...movie, watchlisted: false }));\r\n  //   setItems(alteredItems);\r\n  //   console.log(items);\r\n  // };\r\n\r\n  // OMDB API\r\n  // useEffect(() => {\r\n  //   fetch(\r\n  //     `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`\r\n  //   )\r\n  //     .then((res) => res.json())\r\n  //     .then((data) => setItems(data.results))\r\n  //     .catch((err) => console.log(err));\r\n  // }, []);\r\n\r\n  const handleDetails = (id) => {\r\n    const wantedItem = items.data.find((item) => item.id === id);\r\n    setSelectedItem(wantedItem);\r\n  };\r\n\r\n  // const [watchlisted, setWatchlisted] = useState(false);\r\n  // const toggleWatchlist = (item) => {};\r\n\r\n  // const addToWatchlist = (movie) => {\r\n  //   if (!movie) return;\r\n  //   dispatch({ type: \"ADD_TO_WATCHLIST\", payload: movie });\r\n  // };\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        items,\r\n        selectedItem,\r\n        API_KEY,\r\n        handleDetails,\r\n        dispatch,\r\n        getMovies,\r\n        formatMovieWatchlist,\r\n        favorites,\r\n        setFavorites,\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport { ContextProvider, Context };\r\n","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\contexts\\authContext.js",[],["139","140"],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\Nav.js",["141","142","143","144"],"import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n// import { AuthContext } from \"../contexts/authContext\";\r\nimport { ThemeContext, themes } from \"../contexts/themeContext\";\r\n\r\nimport { Constants } from \"../constants/constants\";\r\nimport { ButtonContainer } from \"./Button\";\r\nimport Search from \"./Search\";\r\nimport ThemeToggler from \"./themeToggler\";\r\n\r\nimport * as ROUTES from \"../constants/routes\";\r\n\r\nconst Navbar = () => {\r\n  // const { isAuthenticated, toggleAuth } = useContext(AuthContext);\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const [showNav, setShowNav] = useState(false);\r\n\r\n  // const buttonText = isAuthenticated ? \"Log out\" : \"Log in\";\r\n\r\n  return (\r\n    <NavWrapper theme={theme} showNav={showNav}>\r\n      <div className=\"theme-toggle\">\r\n        <ThemeToggler showLabel={false} />\r\n      </div>\r\n      <div className=\"nav-toggle-container\">\r\n        <input type=\"checkbox\" onChange={() => setShowNav((showNav) => !showNav)} checked={showNav} />\r\n      </div>\r\n      <div className=\"nav-links\">\r\n        {/* <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarMenu\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button> */}\r\n        <Link to=\"/\" className=\"navbar-brand site-title\" onClick={() => setShowNav((showNav) => !showNav)}>\r\n          Unique Name\r\n        </Link>\r\n        <NavLink exact to=\"/\" activeClassName=\"active\" onClick={() => setShowNav((showNav) => !showNav)}>\r\n          Home\r\n        </NavLink>\r\n        <NavLink to=\"/discover\" activeClassName=\"active\" onClick={() => setShowNav((showNav) => !showNav)}>\r\n          Discover\r\n        </NavLink>\r\n        <NavLink to=\"/popular\" activeClassName=\"active\" onClick={() => setShowNav((showNav) => !showNav)}>\r\n          Popular\r\n        </NavLink>\r\n        <NavLink to=\"/toprated\" activeClassName=\"active\" onClick={() => setShowNav((showNav) => !showNav)}>\r\n          Top Rated\r\n        </NavLink>\r\n        <NavLink to=\"/upcoming\" activeClassName=\"active\" onClick={() => setShowNav((showNav) => !showNav)}>\r\n          Upcoming\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"search-container\">\r\n        <Search />\r\n      </div>\r\n      <div className=\"profile\">\r\n        <NavLink to=\"/profile\" activeClassName=\"active\">\r\n          Profile Name\r\n        </NavLink>\r\n        <NavLink to=\"/profile\" className=\"avatar-link\">\r\n          <img\r\n            className=\"avatar\"\r\n            src=\"https://pbs.twimg.com/profile_images/730612231021322240/Rl0_QYhL_400x400.jpg\"\r\n            alt=\"profile-image\"\r\n          />\r\n        </NavLink>\r\n        <ButtonContainer as={NavLink} href={ROUTES.SIGN_IN} theme={theme} to={ROUTES.SIGN_IN}>\r\n          Log in\r\n        </ButtonContainer>\r\n      </div>\r\n    </NavWrapper>\r\n  );\r\n};\r\n\r\nconst TestLink = styled(NavLink)`\r\n  text-decoration: none;\r\n  color: white;\r\n  transition: transform 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    transform: translateY(-3px);\r\n  }\r\n`;\r\n\r\nconst NavWrapper = styled.div`\r\n  background: ${({ theme }) => (theme === \"dark\" ? \"#05668d\" : \"#02c39a\")};\r\n  width: 100vw;\r\n  height: 100px;\r\n  // max-height: 100px;\r\n  // height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px 20px;\r\n  position: relative;\r\n  transition: all 450ms ease;\r\n\r\n  @media (max-width: 1268px) {\r\n    flex-direction: column;\r\n    height: ${({ showNav }) => (showNav ? \"100vh\" : \"100px\")};\r\n    max-height: 100vh;\r\n\r\n    .nav-links,\r\n    .search-container {\r\n      opacity: ${({ showNav }) => (showNav ? \"1\" : \"0\")};\r\n    }\r\n  }\r\n\r\n  .theme-toggle {\r\n    @media (max-width: 1268px) {\r\n      position: absolute;\r\n      top: 25px;\r\n      left: 10px;\r\n      height: 50px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n  }\r\n\r\n  .nav-toggle-container {\r\n    display: none;\r\n\r\n    @media (max-width: 1268px) {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  .nav-links {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-basis: 40%;\r\n    position: relative;\r\n    margin-left: 2em;\r\n\r\n    @media (max-width: 1268px) {\r\n      flex-direction: column;\r\n      margin: auto 0;\r\n    }\r\n  }\r\n\r\n  .site-title {\r\n    text-decoration: none;\r\n    color: white;\r\n    font-weight: bold;\r\n    font-size: 1.2em;\r\n  }\r\n\r\n  .search-container {\r\n    margin-left: auto;\r\n\r\n    @media (max-width: 1268px) {\r\n      margin-left: 0;\r\n      position: absolute;\r\n      top: 35px;\r\n    }\r\n  }\r\n\r\n  .navbar-toggler {\r\n    width: 100px;\r\n    height: 50px;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n    transition: all 200ms ease-in-out;\r\n\r\n    &:hover {\r\n      // transform: translateY(-3px);\r\n      color: #ff5733;\r\n      opacity: 0.85;\r\n    }\r\n\r\n    &:active {\r\n      transform: translateY(2px);\r\n    }\r\n  }\r\n\r\n  .active {\r\n    color: #ff5733;\r\n    font-weight: 600;\r\n    // border-bottom: 3px solid #ff5733;\r\n    position: relative;\r\n\r\n    ::before {\r\n      content: \"\";\r\n      width: 100%;\r\n      height: 3px;\r\n      position: absolute;\r\n      background: #ff5733;\r\n      bottom: -10px;\r\n    }\r\n  }\r\n\r\n  .profile {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    margin-left: auto;\r\n    // width: 50px;\r\n    // height: 50px;\r\n\r\n    .avatar-link {\r\n      width: 50px;\r\n      height: 50px;\r\n    }\r\n\r\n    .avatar {\r\n      height: 100%;\r\n      width: auto;\r\n      border: 1px solid transparent;\r\n\r\n      &:hover {\r\n        border: 1px solid lime;\r\n      }\r\n    }\r\n\r\n    img {\r\n      border-radius: 50%;\r\n    }\r\n\r\n    ${TestLink}, ${ButtonContainer} {\r\n      margin-left: 1em;\r\n    }\r\n\r\n    @media (max-width: 1268px) {\r\n      margin-left: 0;\r\n      position: absolute;\r\n      top: 25px;\r\n      right: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\n// const Switch = styled(ThemeToggler)`\r\n//   background: green;\r\n//   margin-left: 5em;\r\n//   transform: scale(0.5);\r\n\r\n//   @media (max-width: 1268px) {\r\n//     position: absolute;\r\n//     top: 10px;\r\n//     left: 10px;\r\n//   }\r\n// `;\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\Search.js",["145"],"import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\n\r\nimport { Context } from \"../contexts/context\";\r\n\r\nconst Search = ({ width = \"300px\" }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const { setItems, API_KEY, dispatch, formatMovieWatchlist } = useContext(Context);\r\n\r\n  const handleChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  // const searchMovies = (e) => {\r\n  //   e.preventDefault();\r\n  //   if (!query) return;\r\n  //   setItems([]);\r\n  //   formatQuery(query);\r\n  //   fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`)\r\n  //     .then((res) => res.json())\r\n  //     .then((data) => setItems(data.results))\r\n  //     .catch((err) => console.log(err));\r\n  //   setQuery(\"\");\r\n  //   // console.log(\"submitted\");\r\n  //   // console.log(query, items);\r\n  // };\r\n\r\n  // Async version\r\n  const searchMovies = async (e) => {\r\n    e.preventDefault();\r\n    if (!query) return;\r\n    dispatch({ type: \"RESET_MOVIES\" });\r\n    // setItems([]);\r\n    formatQuery(query);\r\n    try {\r\n      const res = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`);\r\n      const data = await res.json();\r\n      // setItems(data.results);\r\n      const dataWithWatchlist = formatMovieWatchlist(data.results);\r\n      dispatch({ type: \"FETCH_SUCCESS\", payload: dataWithWatchlist });\r\n    } catch (error) {\r\n      // console.log(error);\r\n      dispatch({ type: \"FETCH_ERROR\", payload: error });\r\n    }\r\n    setQuery(\"\");\r\n  };\r\n\r\n  const formatQuery = (stringToFormat) => {\r\n    const formattedQuery = stringToFormat.replace(/ /g, \"+\");\r\n    // console.log(formattedQuery);\r\n    return formattedQuery;\r\n  };\r\n\r\n  // console.log(width);\r\n\r\n  return (\r\n    <SearchWrapper width={width}>\r\n      <form className=\"search__form\" onSubmit={searchMovies}>\r\n        <input\r\n          className=\"search__input\"\r\n          type=\"text\"\r\n          name=\"query\"\r\n          placeholder=\"Search for a movie...\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        />\r\n        <button className=\"search__btn\">\r\n          {width > \"300px\" ? <span className=\"search__text\">Search</span> : \"\"}\r\n          <span className=\"svg-container\">\r\n            <BsSearch />\r\n          </span>\r\n        </button>\r\n        {/* <img id=\"search-icon\" src={MagnifyingGlassSVG} alt=\"Magnifying Glass\" /> */}\r\n      </form>\r\n    </SearchWrapper>\r\n  );\r\n};\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n  width: ${(props) => props.width};\r\n  margin: 0 auto;\r\n\r\n  .search__input {\r\n    width: 100%;\r\n    font-size: 1.1rem;\r\n    border: none;\r\n    border-radius: 15px;\r\n    padding: 8px;\r\n\r\n    ::placeholder {\r\n      font-style: italic;\r\n    }\r\n\r\n    :focus {\r\n      box-shadow: 0 0 10px #ff5733;\r\n    }\r\n  }\r\n\r\n  .search__btn {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    height: 100%;\r\n    width: 30%;\r\n    color: white;\r\n\r\n    padding: 0.4em 1.1em;\r\n    border: none;\r\n    border-radius: 0 15px 15px 0;\r\n    transition: 250ms ease-in-out;\r\n    // background-color: rgba(150, 150, 150, 0.8);\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    &:hover {\r\n      background-color: var(--main-orange);\r\n      cursor: pointer;\r\n    }\r\n\r\n    .search__text {\r\n      margin-right: 0.4rem;\r\n    }\r\n\r\n    .svg-container {\r\n      display: inline-flex;\r\n      align-items: center;\r\n\r\n      & > svg {\r\n        width: 1.25em;\r\n        height: 1.25em;\r\n        // margin-left: 0.4rem;\r\n      }\r\n    }\r\n\r\n    // &:active {\r\n    //   transform: translateY(2px);\r\n    // }\r\n  }\r\n`;\r\n\r\nexport default Search;\r\n","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\Watchlist.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\Profile.js",["146"],"import React, { useContext } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Watchlist from \"../components/Watchlist\";\r\n\r\nimport { Context } from \"../contexts/context\";\r\nimport ItemCard from \"./ItemCard\";\r\n\r\nconst Profile = () => {\r\n  const { favorites } = useContext(Context);\r\n  return (\r\n    <Container>\r\n      <h1>This is the profile page</h1>\r\n      <Link to=\"/profilename/watchlist\">Go to watchlist</Link>\r\n      <div className=\"favorites-container\">\r\n        <p>\r\n          Favorites <span>{favorites.length}</span>\r\n        </p>\r\n        <div className=\"favorites\">\r\n          {favorites.map((favorite) => (\r\n            <ItemCard key={favorite.id} item={favorite} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justiy-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n\r\n  h1 {\r\n    margin-bottom: 1em;\r\n  }\r\n\r\n  .favorites-container {\r\n    margin-top: 2em;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  .favorites {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n\r\n    > * {\r\n      margin: 0 1em;\r\n    }\r\n  }\r\n`;\r\n","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\ItemDetails.js",["147","148","149","150","151","152","153"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Context } from \"../contexts/context\";\r\nimport { ThemeContext } from \"../contexts/themeContext\";\r\nimport logo from \"../logo.svg\";\r\nimport { ButtonContainer } from \"../components/Button\";\r\n// import { watchlistReducer } from \"../reducers/watchlistReducer\";\r\nimport WatchlistToggle from \"./watchlistToggle\";\r\n\r\nconst ItemDetails = () => {\r\n  const { selectedItem, dispatch, items, setItems } = useContext(Context);\r\n  const { theme } = useContext(ThemeContext);\r\n  // const params = useParams();\r\n  // console.log(params);\r\n  const IMAGE_PATH = \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/\"; // Sätt i en global constants-fil?\r\n  // const [theSelectedItem, dispatch] = useReducer(watchlistReducer, selectedItem);\r\n\r\n  // const API_KEY = \"04885294e995c2b055be7cf3da2429ed\";\r\n  // const URL = `https://api.themoviedb.org/${movieId}/movie/343611?api_key=`;\r\n\r\n  // console.log(selectedItem);\r\n  // console.log(selectedItem.genre_ids);\r\n  // console.log(dispatch);\r\n  // console.log(watchlist);\r\n\r\n  // console.log(selectedItem);\r\n  // console.log(selectedItem.watchlisted);\r\n  // console.log(items);\r\n  // useEffect(() => {\r\n  //   // items.map((movie) => setItems([...items, { ...movie, watchlisted: false }]));\r\n  //   let newArr = [...items];\r\n  //   const alteredMovies = newArr.map((movie) => ({ ...movie, watchlisted: false }));\r\n  //   // setItems(alteredMovies);\r\n  //   setItems(alteredMovies);\r\n  // }, []);\r\n  // console.log(items.watchlist);\r\n\r\n  // console.log(\"Selected item is: \", selectedItem);\r\n  // console.log(\"Watchlisted: \", selectedItem.watchlisted);\r\n  // const AddRemove = (selectedItem) => {\r\n  //   if (selectedItem.watchlisted) {\r\n  //     dispatch({ type: \"REMOVE_FROM_WATCHLIST\", selectedItem.id });\r\n  //   }\r\n  //   dispatch({ type: \"ADD_TO_WATCHLIST\", selectedItem });\r\n\r\n  //   // return selectedItem.watchlist ?  \"ADD_TO_WATCHLIST\" : \"REMOVE_FROM_WATCHLIST\";\r\n  // };\r\n\r\n  // console.log(selectedItem);\r\n  // console.log(selectedItem.watchlisted);\r\n  console.log(\"items: \", items);\r\n  // console.log(items.watchlist.indexOf(selectedItem));\r\n\r\n  return (\r\n    <DetailsWrapper>\r\n      <DetailsContainer theme={theme}>\r\n        <section className=\"container\">\r\n          <div className=\"img-wrapper\">\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2/${selectedItem.poster_path}`}\r\n              alt={`${selectedItem.title} Poster`}\r\n            />\r\n          </div>\r\n          <div className=\"info\">\r\n            <div className=\"title-row\">\r\n              <h1>{selectedItem.title}</h1>\r\n              <WatchlistToggle item={selectedItem} />\r\n            </div>\r\n            <div className=\"group\">\r\n              <p className=\"info-headline\">\r\n                Release Date: <span>{selectedItem.release_date}</span>\r\n              </p>\r\n              <span className=\"rating\">\r\n                <img src={logo} />\r\n                {selectedItem.vote_average}\r\n              </span>\r\n              <p>\r\n                Genre ids:\r\n                <span> {selectedItem.genre_ids}</span>\r\n              </p>\r\n              {/* <span>{selectedItem.runtime}</span> */}\r\n            </div>\r\n            <div id=\"description\">\r\n              <h5 className=\"info-headline\">Synopsis</h5>\r\n              <p>{selectedItem.overview}</p>\r\n            </div>\r\n            {/* <Button theme={theme} onClick={() => dispatch({ type: \"ADD_TO_WATCHLIST\", payload: selectedItem })}>\r\n            {items.watchlist.includes(selectedItem) ? \"Remove from watchlist\" : \"Add to watchlist\"}\r\n          </Button> */}\r\n            {/* <Button theme={theme} onClick={() => AddRemove(selectedItem)}>\r\n            {items.watchlist.includes(selectedItem) ? \"Remove from watchlist\" : \"Add to watchlist\"}\r\n          </Button> */}\r\n\r\n            {/* General idea = if indexOf = -1 it doesn't exists in array and then Add to watchlist should display */}\r\n            {/* {items.watchlist.indexOf(selectedItem) !== -1 ? (\r\n              <Button\r\n                theme={theme}\r\n                onClick={() => dispatch({ type: \"REMOVE_FROM_WATCHLIST\", payload: { selectedItem } })}\r\n              >\r\n                Remove from watchlist\r\n              </Button>\r\n            ) : (\r\n              <Button theme={theme} onClick={() => dispatch({ type: \"ADD_TO_WATCHLIST\", payload: { selectedItem } })}>\r\n                Add to watchlist\r\n              </Button>\r\n            )} */}\r\n          </div>\r\n        </section>\r\n      </DetailsContainer>\r\n    </DetailsWrapper>\r\n  );\r\n};\r\n\r\nconst Button = styled(ButtonContainer)`\r\n  display: inline-block;\r\n  height: 50px;\r\n  // width: auto;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  // align-self: end;\r\n`;\r\n\r\nconst DetailsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  // align-items: center;\r\n  height: 100vh;\r\n`;\r\n\r\nconst DetailsContainer = styled.div`\r\n  color: #333;\r\n  position: relative;\r\n  top: -100px;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  .container {\r\n    position: relative;\r\n\r\n    background-color: #ffff;\r\n\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0, 6);\r\n    padding: 20px 20px;\r\n    display: flex;\r\n  }\r\n\r\n  .img-wrapper {\r\n    display: block;\r\n    width: 300px;\r\n    height: 450px;\r\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\r\n\r\n    img {\r\n      display: block;\r\n      width: 100%;\r\n      min-width: 100%;\r\n      height: 100%;\r\n      min-height: 100%;\r\n      border-width: 0px;\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  .title-row {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    svg {\r\n      width: 32px;\r\n      height: 32px;\r\n    }\r\n  }\r\n\r\n  .info {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    max-width: 600px;\r\n    padding-left: 20px;\r\n\r\n    .info-headline {\r\n      font-size: 1.2em;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .rating {\r\n      font-size: 1.5em;\r\n\r\n      img {\r\n        // width: auto;\r\n        height: 1em;\r\n        vertical-align: baseline;\r\n      }\r\n    }\r\n\r\n    span {\r\n      padding-right: 10px;\r\n    }\r\n  }\r\n\r\n  #description {\r\n    // padding-top: 230px;\r\n  }\r\n`;\r\n\r\nexport default ItemDetails;\r\n","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\Page.js",["154","155","156"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport ItemCard from \"./ItemCard\";\r\nimport { Context } from \"../contexts/context\";\r\nimport { ThemeContext } from \"../contexts/themeContext\";\r\n\r\n// Test för att fixa categories/getMovies\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Page = ({ title, category }) => {\r\n  // const API_KEY = \"04885294e995c2b055be7cf3da2429ed\";\r\n  // const [items, setItems] = useState([]);\r\n  const { items, getMovies } = useContext(Context);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  let location = useLocation();\r\n\r\n  const [backdrop, setBackdrop] = useState(\"\");\r\n\r\n  // console.log(items);\r\n  // console.log(items.data);\r\n  // console.log(items.data.title);\r\n  // console.log(category);\r\n  // console.log(`https://image.tmdb.org/t/p/w600_and_h900_bestv2/${items.data[0].poster_path}`);\r\n\r\n  // Varje gång en film laddas färdigt uppdateras komponenten\r\n  // Alltså uppdateras den 20 ggr per refresh eftersom det är 20 filmer\r\n  useEffect(() => {\r\n    getMovies(category);\r\n    items ? console.log(\"Items exist\") : console.log(\"Items don't exist\");\r\n  }, [location]); // Kör getMovies när url:en ändras, bättre men ändå för många uppdateringar tror jag\r\n\r\n  const content = () => {\r\n    return (\r\n      <div>\r\n        <div className=\"backdrop-container\">\r\n          <img\r\n            className=\"backdrop-image\"\r\n            src={items.data.length > 0 ? `https://image.tmdb.org/t/p/original${items.data[0].backdrop_path}` : \"/asdj\"}\r\n            alt=\"Hero image\"\r\n          />\r\n          <div className=\"backdrop-blur\"></div>\r\n        </div>\r\n        <div className=\"main-content\">\r\n          <h1>{title}</h1>\r\n          <div className=\"row\">\r\n            {items.data.map((item) => (\r\n              <ItemCard key={item.id} item={item} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <PageWrapper theme={theme} backdrop={backdrop}>\r\n      <div className=\"container\">{content()}</div>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nconst PageWrapper = styled.div`\r\n  // height för att hela sidan ska bli färgad och inte bara ett litet block\r\n  // height: 100vh;\r\n  // background-color: ${(props) => (props.theme === \"dark\" ? \"#282c34\" : \"#f0f3bd\")};\r\n\r\n  .backdrop-container {\r\n    margin: 0 auto;\r\n    width: 80%;\r\n    height: 800px;\r\n    box-shadow: 0 0 8px 8px #141e30 inset;\r\n    // box-shadow: ${(props) => `0 0 8px 8px ${props.theme.background} inset`};\r\n    // background-image: ${(props) => `url(https://image.tmdb.org/t/p/original${props.backdrop})`};\r\n\r\n    @media (max-width: 1268px) {\r\n      width: 100%;\r\n      height: 550px;\r\n    }\r\n\r\n    .backdrop-image {\r\n      width: 100%;\r\n      height: 100%;\r\n      box-shadow: 0 0 8px 8px #282c34 inset;\r\n    }\r\n  }\r\n\r\n  .main-content {\r\n    margin-top: -100px;\r\n\r\n    @media (max-width: 1268px) {\r\n      margin-top: -350px;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    color: ${(props) => (props.theme === \"dark\" ? \"#ffff\" : \"black\")};\r\n    text-align: center;\r\n  }\r\n\r\n  .row {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n\r\n    > * {\r\n      // width: 300px;\r\n    }\r\n\r\n    > div {\r\n      margin: 1.5em 1.25em;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Page;\r\n","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\reducers\\movieReducer.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\reducers\\watchlistReducer.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\Button.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\themeToggler.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\ItemCard.js",["157","158","159","160","161","162","163","164"],"import React, { useState, useContext, useReducer } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport logo from \"../logo.svg\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../contexts/context\";\r\nimport { ThemeContext } from \"../contexts/themeContext\";\r\nimport { ButtonContainer } from \"./Button\";\r\nimport WatchlistToggle from \"./watchlistToggle\";\r\n\r\nconst ItemCard = ({ item }) => {\r\n  const IMAGE_PATH = \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/\"; // Sätt i en global constants-fil?\r\n  // const IMAGE_PATH = \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\"\r\n  const { id, title, overview, poster_path, release_date, vote_average, genre_ids, watchlisted } = item;\r\n  const { handleDetails } = useContext(Context);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  // const [linkTitle, setLinkTitle] = useState(\"\");\r\n\r\n  // const formatTitle = (title) => {\r\n  //   const formattedTitle = title.replace(/ /g, \"_\");\r\n  //   setLinkTitle(formattedTitle);\r\n  // };\r\n  // console.log(props.item.title);\r\n  // console.log(title);\r\n\r\n  return (\r\n    <ItemContainer theme={theme} onClick={() => handleDetails(id)}>\r\n      <div className=\"card\">\r\n        <Link to={`/movies/${title}`}>\r\n          <div className=\"img-container\">\r\n            <img\r\n              className=\"card-img\"\r\n              src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2/${poster_path}`}\r\n              alt={`${title} Poster`}\r\n            />\r\n          </div>\r\n        </Link>\r\n\r\n        <div className=\"card-footer\">\r\n          <div className=\"test\">\r\n            <h2>{title}</h2>\r\n            <span className=\"rating\">\r\n              <img src={logo} />\r\n              {vote_average}\r\n            </span>\r\n          </div>\r\n          <div className=\"misc\">\r\n            <p>{release_date}</p>\r\n            <WatchlistToggle item={item} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ItemContainer>\r\n  );\r\n};\r\n\r\nconst ItemContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 300px;\r\n  height: 510px;\r\n\r\n  .card {\r\n    border-radius: 5px;\r\n    transition: all 0.1s linear;\r\n    border: 0.04rem solid rgba(0, 0, 0, 0);\r\n    color: black;\r\n  }\r\n\r\n  .img-container {\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 400px;\r\n    width: 300px;\r\n    border-radius: 5px 5px 0 0;\r\n\r\n    .card-img {\r\n      display: block;\r\n      opacity: 95%;\r\n      width: 100%;\r\n      height: 100%;\r\n      display: grid;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n  }\r\n\r\n  .card-footer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background-color: white;\r\n    border-radius: 0 0 5px 5px;\r\n    padding: 5px 10px;\r\n    width: 300px;\r\n\r\n    .test {\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 1.2rem;\r\n      font-weight: 600;\r\n      height: 30px;\r\n      overflow: hidden;\r\n    }\r\n\r\n    .rating {\r\n      font-weight: 600;\r\n      font-size: 1.2rem;\r\n      width: 70px;\r\n      text-align: right;\r\n    }\r\n\r\n    .misc {\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n    }\r\n\r\n    p {\r\n      color: rgba(0, 0, 0, 0.6);\r\n    }\r\n  }\r\n\r\n  .card:hover {\r\n    border: 0.04rem solid rgba(0, 0, 0, 0.2);\r\n    box-shadow: 0 10px 10px rgba(0, 0, 0, 0.5);\r\n    cursor: pointer;\r\n    transform: translateY(-10px);\r\n\r\n    img {\r\n      opacity: 100%;\r\n    }\r\n\r\n    h2 {\r\n      color: var(--main-orange);\r\n    }\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n\r\n    :hover {\r\n      h2 {\r\n        color: var(--main-orange);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nItemCard.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    poster_path: PropTypes.string,\r\n    release_date: PropTypes.string,\r\n    vote_average: PropTypes.number,\r\n    genre_ids: PropTypes.arrayOf(PropTypes.number),\r\n  }),\r\n};\r\n\r\nItemCard.defaultProps = {\r\n  poster_path: \"../images/the-witcher-3.jpg\",\r\n};\r\n\r\n// ItemCard.defaultProps = {\r\n//   poster_path:\r\n//     \"https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg\",\r\n// };\r\n\r\nexport default ItemCard;\r\n","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\images\\index.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\pages\\home.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\pages\\Home.js",["165"],"import React, { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Context } from \"../contexts/context\";\r\nimport Search from \"../components/Search\";\r\nimport ItemCard from \"../components/ItemCard\";\r\n\r\nconst Home = ({ header }) => {\r\n  const { items } = useContext(Context);\r\n\r\n  const content = () => {\r\n    return (\r\n      <div>\r\n        {/* <div className=\"backdrop-container\">\r\n          <img\r\n            className=\"backdrop-image\"\r\n            src={items.data.length > 0 ? `https://image.tmdb.org/t/p/original${items.data[0].backdrop_path}` : \"/asdj\"}\r\n            alt=\"Hero image\"\r\n          />\r\n          <div className=\"backdrop-blur\"></div>\r\n        </div> */}\r\n        <div className=\"main-content\">\r\n          <div className=\"row\">\r\n            {items.data.map((item) => (\r\n              <ItemCard key={item.id} item={item} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>{header}</h1>\r\n      <Search width={\"500px\"} />\r\n      {items.data.length > 0 ? content() : <p>Make a search</p>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 2em;\r\n\r\n  > * {\r\n    margin: 0.5em 0;\r\n  }\r\n\r\n  .main-content {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .row {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n\r\n    > * {\r\n      width: 300px;\r\n    }\r\n\r\n    > div {\r\n      margin: 1.5em 1.25em;\r\n    }\r\n  }\r\n`;\r\n","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\containers\\footer.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\watchlistToggle.js",["166","167"],"import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\r\nimport { Context } from \"../contexts/context\";\r\nimport { watchlistReducer } from \"../reducers/watchlistReducer\";\r\n\r\nconst WatchlistToggle = ({ item }) => {\r\n  const { favorites, setFavorites } = useContext(Context);\r\n  //   const [watchlisted, setWatchlisted] = useState(false);\r\n\r\n  //   const toggleWatchlist = () => {\r\n  //     if (watchlisted) {\r\n  //       setWatchlisted(false);\r\n  //       console.log(\"Watchlisted \" + item.title);\r\n  //     } else {\r\n  //       setWatchlisted(true);\r\n  //       console.log(\"Removed \" + item.title);\r\n  //     }\r\n  //   };\r\n  // console.log(\"favorites: \" + typeof favorites);\r\n\r\n  const toggleWatchlist = (item) => {\r\n    if (favorites.some((movie) => movie.id === item.id)) {\r\n      const newFavorites = favorites.filter((movie) => movie.id !== item.id);\r\n      setFavorites(newFavorites);\r\n    } else {\r\n      setFavorites([...favorites, item]);\r\n    }\r\n  };\r\n\r\n  return !favorites.some((movie) => movie.id === item.id) ? (\r\n    <SvgContainer onClick={() => toggleWatchlist(item)}>\r\n      <AiFillEye />\r\n    </SvgContainer>\r\n  ) : (\r\n    <SvgContainer onClick={() => toggleWatchlist(item)}>\r\n      <AiFillEyeInvisible />\r\n    </SvgContainer>\r\n  );\r\n};\r\n\r\nexport default WatchlistToggle;\r\n\r\nconst SvgContainer = styled.div`\r\n  cursor: pointer;\r\n  transition: color 250ms ease-in-out;\r\n  max-width: 32px;\r\n  max-height: 32px;\r\n\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  &:hover {\r\n    color: orange;\r\n  }\r\n`;\r\n","C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\contexts\\firebase.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\lib\\firebase.prod.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\pages\\sign-in.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\pages\\sign-up.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\form\\index.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\components\\form\\styles\\form.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\constants\\constants.js",[],"C:\\Users\\Patrick\\Desktop\\react\\movie-database\\src\\constants\\routes.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":8,"column":8,"nodeType":"174","messageId":"175","endLine":8,"endColumn":14},{"ruleId":"172","severity":1,"message":"176","line":9,"column":8,"nodeType":"174","messageId":"175","endLine":9,"endColumn":15},{"ruleId":"172","severity":1,"message":"177","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":26},{"ruleId":"168","replacedBy":"178"},{"ruleId":"170","replacedBy":"179"},{"ruleId":"172","severity":1,"message":"180","line":5,"column":24,"nodeType":"174","messageId":"175","endLine":5,"endColumn":30},{"ruleId":"172","severity":1,"message":"181","line":7,"column":10,"nodeType":"174","messageId":"175","endLine":7,"endColumn":19},{"ruleId":"172","severity":1,"message":"182","line":16,"column":18,"nodeType":"174","messageId":"175","endLine":16,"endColumn":29},{"ruleId":"183","severity":1,"message":"184","line":60,"column":11,"nodeType":"185","endLine":64,"endColumn":13},{"ruleId":"172","severity":1,"message":"186","line":9,"column":11,"nodeType":"174","messageId":"175","endLine":9,"endColumn":19},{"ruleId":"172","severity":1,"message":"187","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":17},{"ruleId":"172","severity":1,"message":"188","line":1,"column":29,"nodeType":"174","messageId":"175","endLine":1,"endColumn":38},{"ruleId":"172","severity":1,"message":"189","line":1,"column":40,"nodeType":"174","messageId":"175","endLine":1,"endColumn":50},{"ruleId":"172","severity":1,"message":"190","line":11,"column":25,"nodeType":"174","messageId":"175","endLine":11,"endColumn":33},{"ruleId":"172","severity":1,"message":"186","line":11,"column":42,"nodeType":"174","messageId":"175","endLine":11,"endColumn":50},{"ruleId":"172","severity":1,"message":"191","line":15,"column":9,"nodeType":"174","messageId":"175","endLine":15,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":74,"column":17,"nodeType":"185","endLine":74,"endColumn":35},{"ruleId":"172","severity":1,"message":"194","line":114,"column":7,"nodeType":"174","messageId":"175","endLine":114,"endColumn":13},{"ruleId":"172","severity":1,"message":"195","line":19,"column":20,"nodeType":"174","messageId":"175","endLine":19,"endColumn":31},{"ruleId":"196","severity":1,"message":"197","line":32,"column":6,"nodeType":"198","endLine":32,"endColumn":16,"suggestions":"199"},{"ruleId":"183","severity":1,"message":"184","line":38,"column":11,"nodeType":"185","endLine":42,"endColumn":13},{"ruleId":"172","severity":1,"message":"200","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"189","line":1,"column":39,"nodeType":"174","messageId":"175","endLine":1,"endColumn":49},{"ruleId":"172","severity":1,"message":"201","line":9,"column":10,"nodeType":"174","messageId":"175","endLine":9,"endColumn":25},{"ruleId":"172","severity":1,"message":"191","line":13,"column":9,"nodeType":"174","messageId":"175","endLine":13,"endColumn":19},{"ruleId":"172","severity":1,"message":"202","line":15,"column":22,"nodeType":"174","messageId":"175","endLine":15,"endColumn":30},{"ruleId":"172","severity":1,"message":"203","line":15,"column":73,"nodeType":"174","messageId":"175","endLine":15,"endColumn":82},{"ruleId":"172","severity":1,"message":"204","line":15,"column":84,"nodeType":"174","messageId":"175","endLine":15,"endColumn":95},{"ruleId":"192","severity":1,"message":"193","line":45,"column":15,"nodeType":"185","endLine":45,"endColumn":33},{"ruleId":"172","severity":1,"message":"188","line":1,"column":29,"nodeType":"174","messageId":"175","endLine":1,"endColumn":38},{"ruleId":"172","severity":1,"message":"200","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"177","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":26},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'watchlistReducer' is defined but never used.",["205"],["206"],"'themes' is defined but never used.","'Constants' is defined but never used.","'toggleTheme' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setItems' is assigned a value but never used.","'Watchlist' is defined but never used.","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'dispatch' is assigned a value but never used.","'IMAGE_PATH' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Button' is assigned a value but never used.","'setBackdrop' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category', 'getMovies', and 'items'. Either include them or remove the dependency array.","ArrayExpression",["207"],"'useState' is defined but never used.","'ButtonContainer' is defined but never used.","'overview' is assigned a value but never used.","'genre_ids' is assigned a value but never used.","'watchlisted' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},"Update the dependencies array to be: [category, getMovies, items, location]",{"range":"210","text":"211"},[1173,1183],"[category, getMovies, items, location]"]